// this mod can break melee's anim rate limit
global function FighterMelee_Init

global function FighterMeleeThink

void function FighterMelee_Init()
{
    RegisterSignal( "StartFighterMeleeThink" )
    AddCallback_OnClientConnected( OnClientConnected )
}

void function OnClientConnected( entity player )
{
    thread CheckPlayerFighterMeleeLifeLong( player )
}

void function CheckPlayerFighterMeleeLifeLong( entity player )
{
    player.EndSignal( "OnDestroy" )

    while ( true )
    {
        //print( "checking melee" )
        WaitFrame()
        if ( !IsAlive( player ) )
            continue
        entity meleeWeapon = player.GetMeleeWeapon()
        if ( !IsValid( meleeWeapon ) )
            continue

        if ( meleeWeapon.HasMod( "fighter_melee" ) )
            waitthread FighterMeleeThink( player, meleeWeapon )
    }
}

void function FighterMeleeThink( entity player, entity meleeWeapon )
{
    player.EndSignal( "OnDeath" )
    player.EndSignal( "OnDestroy" )
    player.Signal( "StartFighterMeleeThink" )
    player.EndSignal( "StartFighterMeleeThink" )

    string meleeName = meleeWeapon.GetWeaponClassName()
    array<string> meleeMods = meleeWeapon.GetMods()
    while( true )
    {
        player.WaitSignal( "OnMelee" )
        entity melee = player.GetMeleeWeapon()
        if ( !IsValid( melee ) )
        {
            player.GiveOffhandWeapon( meleeName, OFFHAND_MELEE, meleeMods ) // refresh the melee
            continue
        }

        //string newName = melee.GetWeaponClassName()
        //array<string> newMods = melee.GetMods()
        //if ( newName != meleeName || newMods != meleeMods ) // melee weapon changed!
        //    return

        float attackAnimTime = melee.GetWeaponSettingFloat( eWeaponVar.melee_attack_animtime )
        wait attackAnimTime // wait for melee holstering
        player.TakeWeaponNow( melee.GetWeaponClassName() )

        player.GiveOffhandWeapon( meleeName, OFFHAND_MELEE, meleeMods ) // refresh the melee
    }
}