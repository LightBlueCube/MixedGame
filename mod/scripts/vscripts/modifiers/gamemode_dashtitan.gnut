untyped // entity.s requires this
global function Modded_Gamemode_Dash_Titan_Init

const float DASH_TITAN_GRAVITY_SCALE = 0.4
const float DASH_TITAN_PLAYER_GROUND_FRICTION = 0.8

void function Modded_Gamemode_Dash_Titan_Init()
{
    AddCallback_OnPlayerRespawned( OnPlayerRespawned )
    AddSpawnCallback( "npc_titan", OnTitanSpawned )
}

void function OnPlayerRespawned( entity player )
{
    player.kv.gravity = DASH_TITAN_GRAVITY_SCALE
    SetPlayerGroundFrictionScale( player, DASH_TITAN_PLAYER_GROUND_FRICTION )
}

void function OnTitanSpawned( entity titan )
{
    titan.kv.gravity = DASH_TITAN_GRAVITY_SCALE

    // following are player titans( pet titans )
	entity player = GetPetTitanOwner( titan )
	if( !IsValid( player ) )
		return
	if ( "spawnWithoutSoul" in titan.s )
	{
		// this is defined in CreateAutoTitanForPlayer_ForTitanTitanReplace_BecomesPilot(), mark the titan as "disembarked" not "hotdropping"
		if ( expect bool ( titan.s.spawnWithoutSoul ) )
			return
	}

    string meleeName = "melee_titan_punch_ion"
    entity meleeWeapon = titan.GetMeleeWeapon()
    if ( IsValid( meleeWeapon ) )
    {
        meleeName = meleeWeapon.GetWeaponClassName()
        if ( meleeName == "melee_titan_sword" ) // ronin sword
            meleeName = "melee_titan_punch_northstar"
    }
    titan.TakeOffhandWeapon( OFFHAND_MELEE )
    titan.GiveOffhandWeapon( meleeName, OFFHAND_MELEE, ["dash_punch", "dash_punch_seq"] )
}