global function Modded_Gamemode_Fake_Titanfall1_Init

void function Modded_Gamemode_Fake_Titanfall1_Init()
{
    // rodeo modifier settings!
	ClassicRodeo_SetEnabled( true )
	//ClassicRodeo_AllowContinouslyRemoveBattery( true ) // so you can rip battery all day long!
	//ClassicRodeo_SetBatteryRemovalDamageAmped( true ) // rodeo will deal large damage to titans
    ClassicRodeo_SetBatteryRemovalDamageScale( 0.6 ) // take less damage from battery removal
    ClassicRodeo_SetRodeoGrenadeDamageNerfEnabled( false ) // take same damage as battery removal from grenades
	ClassicRodeo_SetAdditionalDamageScale( 1.0 )
	ClassicRodeo_BatteryContainerOnlyProtectsOnce( true ) // battery container can only protect once
	//ClassicRodeo_OwnerApplyBatteryAllowed( true )
	//ClassicRodeo_SetShouldAutomaticallyDoRodeoSequence( true )

    AddCallback_OnTitanGetsNewTitanLoadout( OnTitanGetsLoadout ) // titan settings
}

void function OnTitanGetsLoadout( entity titan, TitanLoadoutDef titanLoadout )
{
    //print( "Titan got loadout!" )
    thread SetupTTF1StyleTitan( titan, titanLoadout )
}

void function SetupTTF1StyleTitan( entity titan, TitanLoadoutDef titanLoadout )
{
    entity soul = titan.GetTitanSoul()
    if ( !IsValid( soul ) )
        return

    titan.EndSignal( "OnDestroy" )
    soul.EndSignal( "OnDestroy" )

    // shield regen
    TitanHealth_SetSoulEnableShieldRegen( soul, true )
	TitanHealth_SetSoulShieldRegenDelay( soul, TITAN_SHIELD_REGEN_DELAY )
	TitanHealth_SetSoulShieldRegenTime( soul, TITAN_SHIELD_REGEN_TIME )
	TitanHealth_SetSoulShieldDamageReductionScale( soul, 0.75 )
    // doomed state
    TitanHealth_SetSoulInfiniteDoomedState( soul, false )

    // wait for next frame before we apply and classmods
    WaitFrame() 

    // health
    int segments = titan.GetMaxHealth() / 2500 // hardcoded
    soul.SetShieldHealthMax( segments * 1000 ) // 1000(was 1250) shield per segment
    soul.SetShieldHealth( soul.GetShieldHealthMax() )
    titan.SetMaxHealth( titan.GetMaxHealth() * 0.6 ) // 1500 health per segment
    titan.SetHealth( titan.GetMaxHealth() )

    // class mods
    if ( titanLoadout.setFileMods.contains( "pas_mobility_dash_capacity" ) ) // has turbo engine
    {
        // change to PAS_HYPER_CORE
        GivePassive( soul, ePassives.PAS_HYPER_CORE )
        if ( TitanDamageRewardsTitanCoreTime() )
        {
            SoulTitanCore_SetNextAvailableTime( soul, 0.20 )
            GiveOffhandElectricSmoke( titan )
        }
    }
    titanLoadout.setFileMods.removebyvalue( "pas_mobility_dash_capacity" )
    titanLoadout.setFileMods.append( "turbo_titan" )
}