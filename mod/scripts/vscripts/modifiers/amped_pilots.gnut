untyped // SetPlayerSettings() requires this
global function AmpedPilots_Enabled_Init

global function AmpedPilots_Init
global function AmpedPilots_SetEnabled

struct
{
    bool pilotAmpEnabled = false
} file

void function AmpedPilots_Enabled_Init()
{
    file.pilotAmpEnabled = true
}

void function AmpedPilots_Init()
{
    AddCallback_PlayerClassChanged( OnPlayerClassChanged )
    AddCallback_OnPlayerGetsNewPilotLoadout( OnPilotGetLoadout )
}

void function OnPlayerClassChanged( entity player )
{
    if ( !file.pilotAmpEnabled )
        return

    if ( player.IsTitan() )
        return
    
    thread ChangePlayerToColiseumSetFile( player )
}

void function ChangePlayerToColiseumSetFile( entity player )
{
    player.EndSignal( "OnDestroy" )
    player.EndSignal( "OnDeath" )

    WaitFrame() // wait for other class functions to set up

    // skin and camo get before resetting
    bool isFemale = IsPlayerFemale( player )
    array<string> classMods = player.GetPlayerSettingsMods()
    int skin = player.GetSkin()
    int camo = player.GetCamo()

    asset model = player.GetModelName()
    //player.SetPlayerSettingsWithMods( "pilot_coliseum_male", ["pas_ads_hover"] )
    string coliseumSetFile = "pilot_coliseum_male"
    if ( isFemale )
        coliseumSetFile = "pilot_coliseum_female"
    player.SetPlayerSettingsWithMods( coliseumSetFile, classMods )
    player.SetModel( model )
    player.SetSkin( skin )
    player.SetCamo( camo )
}

void function OnPilotGetLoadout( entity player, PilotLoadoutDef p )
{
    if ( !file.pilotAmpEnabled )
        return

    if ( PlayerHasWeapon( player, "mp_ability_grapple" ) )
        player.GiveExtraWeaponMod( "all_grapple" )
    else
        player.GiveExtraWeaponMod( "amped_tacticals" )
}

void function AmpedPilots_SetEnabled( bool enabled )
{
    file.pilotAmpEnabled = enabled
}