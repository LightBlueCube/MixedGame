untyped
global function BTReplace_Init

void function BTReplace_Init() 
{
    #if SERVER
    	PrecacheParticleSystem( $"P_BT_eye_SM" )
    	PrecacheModel( $"models/titans/buddy/titan_buddy.mdl" )
		AddSpawnCallback("npc_titan", OnTitanfallBT )
		AddCallback_OnPilotBecomesTitan( OnPilotBecomesTitan )
		AddCallback_OnTitanBecomesPilot( OnTitanBecomesPilot )
		// register things for ingame script
		if( GetGameState() >= eGameState.Prematch )
		{
			foreach( entity player in GetPlayerArray() )
				OnClientConnected( player )
		}
		AddCallback_OnClientConnected( OnClientConnected )

    #endif
}

void function OnTitanfallBT( entity titan )
{
	// needs to be a player's titan
	entity player = GetPetTitanOwner( titan )
	if ( !IsValid( player ) )
		return
	if ( !player.IsPlayer() )
		return
	//entity soul = titan.GetTitanSoul()
	
	SetBTLoadout( titan )
	SetAutoTitanTitle( titan )
	thread EjectingVoiceline( titan ) // try enable voiceline every time
	
	//thread CheckVoiceline_Threaded( titan )
}

void function OnPilotBecomesTitan( entity player, entity titan )
{
	//SetBTLoadout( titan )
	SetPlayerTitanTitle( player )
	thread UpdateBTOffhands( player )
}

void function OnTitanBecomesPilot( entity player, entity titan )
{
	//SetBTLoadout( titan )
	SetAutoTitanTitle( titan )
}

void function OnClientConnected( entity player )
{
	InitDoomedType( player )
}

//Apply loadout
void function SetBTLoadout( entity titan )
{
	#if SERVER
	if (IsValid( titan )) //Anti Crash
	{
		entity player = GetPetTitanOwner( titan )
		entity soul = titan.GetTitanSoul()
		
		if (IsValid( soul ) && IsValid( player )) //Anti Crash 2
		{
			array<entity> weapons = titan.GetMainWeapons()
			
			//Monarch as Fake BT
			if( titan.GetModelName() == $"models/titans/medium/titan_medium_vanguard.mdl" && titan.GetCamo() == -1 && titan.GetSkin() == 3 )
			{
				// notification done here!
				// check if player has a titan dropping, if not it means player disembarked and created their pet titans, don't give loadouts if so.
				bool isTitanDropping = expect bool( player.s.replacementDropInProgress )
				if( isTitanDropping )
				{
					// Moved to titan_health.gnut, no more infinite doom
					soul.s.shouldInfiniteDoom <- false // initlizing...
					soul.s.lastPrimaryAmmo <- 1.0 	// float, to save ammo counts
					//soul.s.disableTitanPick <- true // seems already set in titan_replace.gnut. setting players unable to replace weapons from ground
					SendHudMessage(player, "已启用SB-7274装备\n帝王被动将修改皮肤及处决动画\n取消\"边境帝王\"战绘以使用原版帝王",  -1, 0.2, 200, 200, 225, 255, 0.15, 12, 1);
				}

				// Disable doomed in TTDM
				//if( TitanEjectIsDisabled() )
					//soul.soul.skipDoomState = true

				//Model
				titan.SetModel($"models/titans/buddy/titan_buddy.mdl")
				//player.SetPlayerSettings("titan_buddy")
				StartParticleEffectOnEntity( titan, GetParticleSystemIndex( $"P_BT_eye_SM" ), FX_PATTACH_POINT_FOLLOW, titan.LookupAttachment( "EYEGLOW" ) )

				//Weapons
				titan.TakeWeaponNow( weapons[0].GetWeaponClassName() )
				titan.GiveWeapon("mp_titanweapon_xo16_shorty",["burst", "fakebt_balance"])
				//titan.GiveWeapon("mp_titanweapon_xo16_vanguard")
				titan.GiveWeapon("mp_titanweapon_triplethreat", ["fakebt_balance"])
				//titan.GiveWeapon("mp_titanweapon_meteor")
				//titan.GiveWeapon("mp_titanweapon_sticky_40mm")
				titan.GiveWeapon("mp_titanweapon_rocketeer_rocketstream")
				//titan.SetActiveWeaponByName("mp_titanweapon_xo16_vanguard")
				titan.SetActiveWeaponByName("mp_titanweapon_xo16_shorty")

				//Rodeo
				//DisableTitanRodeo( titan )

				//Ordnance
				titan.TakeOffhandWeapon(OFFHAND_ORDNANCE)	
				//titan.GiveOffhandWeapon("mp_titanweapon_shoulder_rockets", OFFHAND_ORDNANCE )
				titan.GiveOffhandWeapon("mp_titanweapon_salvo_rockets", OFFHAND_ORDNANCE )

				//Defence
				titan.TakeOffhandWeapon(OFFHAND_SPECIAL)
				titan.GiveOffhandWeapon("mp_titanweapon_vortex_shield", OFFHAND_SPECIAL )
				titan.GetOffhandWeapons()[OFFHAND_SPECIAL].SetMods(["slow_recovery_vortex", "sp_wider_return_spread"])
				
				//Tactical
		    	titan.TakeOffhandWeapon(OFFHAND_ANTIRODEO)
				titan.GiveOffhandWeapon("mp_titanability_smoke", OFFHAND_ANTIRODEO ) 
				
				//Melee
				titan.TakeOffhandWeapon(OFFHAND_MELEE)
				titan.GiveOffhandWeapon( "melee_titan_punch_vanguard", OFFHAND_MELEE )
				
				//Titan Core
				titan.TakeOffhandWeapon(OFFHAND_EQUIPMENT)
				titan.GiveOffhandWeapon( "mp_titancore_amp_core", OFFHAND_EQUIPMENT )


				//Executions & Skins
				if( SoulHasPassive( soul, ePassives.PAS_VANGUARD_SHIELD ) )
				{
					soul.soul.titanLoadout.titanExecution = "execution_bt_flip"
					titan.SetSkin(1)
				}
				if( SoulHasPassive( soul, ePassives.PAS_VANGUARD_DOOM) )
				{
					soul.soul.titanLoadout.titanExecution = "execution_bt_pilotrip"
					titan.SetSkin(2)
				}
				if( SoulHasPassive( soul, ePassives.PAS_VANGUARD_REARM) )
				{
					soul.soul.titanLoadout.titanExecution = "execution_bt_kickshoot"
					titan.SetSkin(0)
				}
				if( SoulHasPassive( soul, ePassives.PAS_VANGUARD_COREMETER ) )
				{
					TakePassive( soul, ePassives.PAS_VANGUARD_COREMETER )
					soul.soul.titanLoadout.titanExecution = "execution_bt_kickshoot"
					titan.SetSkin(0)
				}

				//Passives
				//GivePassive( soul, ePassives.PAS_BUILD_UP_NUCLEAR_CORE )
				GivePassive( soul, ePassives.PAS_AUTO_EJECT )
				
				//Titan OS
				//btName = GetTitanCharacterNameFromSetFile("titan_buddy")
				//soul.soul.titanLoadout.titanClass = GetTitanClassFromSetFile( "titan_buddy" )

			}
			else
			{
				// other titans will remain infinite doomed state
				player.s.shouldInfiniteDoom <- true
			}
		}
	}
	#endif
}
void function SetBTOffhands( entity player )
{
	#if SERVER
	if( IsValid(player) )
	{
		if ( player.GetModelName() == $"models/titans/buddy/titan_buddy.mdl" )
		{
			entity mainweapon = player.GetActiveWeapon()
			table<int,float> cooldowns = GetWeaponCooldownsForTitanLoadoutSwitch( player )
			entity soul = player.GetTitanSoul()
			if( !IsValid( soul ) )
				return

			if( IsValid(mainweapon) )
			{
				//Offhands
				//if( mainweapon.GetWeaponClassName() == "mp_titanweapon_xo16_vanguard" )
				if( mainweapon.GetWeaponClassName() == "mp_titanweapon_xo16_shorty" )
				{
					if( !PlayerHasWeapon( player, "mp_titanability_smoke" ) )
					{
						SendHudMessage( player, "切换至远征泰坦技能组", -1, 0.3, 255, 200, 0, 0, 0.15, 6, 0.15 )
						//Ordnance
						//player.TakeOffhandWeapon(OFFHAND_ORDNANCE)	
						//player.GiveOffhandWeapon("mp_titanweapon_shoulder_rockets", OFFHAND_ORDNANCE )
						player.TakeOffhandWeapon(OFFHAND_ORDNANCE)	
						player.GiveOffhandWeapon("mp_titanweapon_salvo_rockets", OFFHAND_ORDNANCE )

						//Defence
						player.TakeOffhandWeapon(OFFHAND_SPECIAL)
						player.GiveOffhandWeapon("mp_titanweapon_vortex_shield", OFFHAND_SPECIAL, ["slow_recovery_vortex", "sp_wider_return_spread", "sur_level_0"] )
						
						//Tactical
			        	player.TakeOffhandWeapon(OFFHAND_ANTIRODEO)
						player.GiveOffhandWeapon("mp_titanability_smoke", OFFHAND_ANTIRODEO ) 
						
						//Melee
						player.TakeOffhandWeapon(OFFHAND_MELEE)
						player.GiveOffhandWeapon( "melee_titan_punch_vanguard", OFFHAND_MELEE )

						//Ammo
						//TakeWeaponAmmo( player )
						ReplaceWeaponAmmo( player, soul )
						SetWeaponCooldownsForTitanLoadoutSwitch( player, cooldowns )
					}
				}
				if( mainweapon.GetWeaponClassName() == "mp_titanweapon_triplethreat" )
				{
					if( !PlayerHasWeapon( player, "mp_titanweapon_heat_shield" ) )
					{
						SendHudMessage( player, "切换至掷弹兵泰坦技能组", -1, 0.3, 255, 200, 0, 0, 0.15, 6, 0.15 )
						//Ordnance
						player.TakeOffhandWeapon(OFFHAND_ORDNANCE)
						player.GiveOffhandWeapon("mp_titanweapon_dumbfire_rockets", OFFHAND_ORDNANCE )

						//Defence
						player.TakeOffhandWeapon(OFFHAND_SPECIAL)
						player.GiveOffhandWeapon("mp_titanweapon_heat_shield", OFFHAND_SPECIAL, ["fakebt_balance"] )
						//player.GiveOffhandWeapon("mp_titanability_particle_wall", OFFHAND_SPECIAL, ["amped_wall"] )

						//Tactical
			        	player.TakeOffhandWeapon(OFFHAND_ANTIRODEO) 
						player.GiveOffhandWeapon("mp_titanability_sonar_pulse", OFFHAND_ANTIRODEO )

						//Melee
						player.TakeOffhandWeapon(OFFHAND_MELEE)
						player.GiveOffhandWeapon( "melee_titan_punch_scorch", OFFHAND_MELEE )

						//Ammo
						//TakeWeaponAmmo( player )
						ReplaceWeaponAmmo( player, soul )
						SetWeaponCooldownsForTitanLoadoutSwitch( player, cooldowns )
					}
				}
				/*
				if( mainweapon.GetWeaponClassName() == "mp_titanweapon_meteor" )
				{
					if( !PlayerHasWeapon( player, "mp_titanability_slow_trap" ) )
					{
						SendHudMessage( player, "切换至烈焰泰坦技能组", -1, 0.3, 255, 200, 0, 0, 0.15, 6, 0.15 )
						//Ordnance
						player.TakeOffhandWeapon(OFFHAND_ORDNANCE)	
						player.GiveOffhandWeapon("mp_titanweapon_flame_wall", OFFHAND_ORDNANCE )
						
						//Defence
						player.TakeOffhandWeapon(OFFHAND_SPECIAL)
						player.GiveOffhandWeapon("mp_titanweapon_heat_shield", OFFHAND_SPECIAL )
						
						//Tactical
			        	player.TakeOffhandWeapon(OFFHAND_ANTIRODEO)
						player.GiveOffhandWeapon("mp_titanability_slow_trap", OFFHAND_ANTIRODEO ) 
						
						//Melee
						player.TakeOffhandWeapon(OFFHAND_MELEE)
						player.GiveOffhandWeapon( "melee_titan_punch_scorch", OFFHAND_MELEE )

						//Ammo
						//TakeWeaponAmmo( player )
						ReplaceWeaponAmmo( player, soul )
						SetWeaponCooldownsForTitanLoadoutSwitch( player, cooldowns )
					}
				}
				if( mainweapon.GetWeaponClassName() == "mp_titanweapon_sticky_40mm" )
				{
					if( !PlayerHasWeapon( player, "mp_titanability_sonar_pulse" ) )
					{
						SendHudMessage( player, "切换至强力泰坦技能组", -1, 0.3, 255, 200, 0, 0, 0.15, 6, 0.15 )
						//Ordnance
						player.TakeOffhandWeapon(OFFHAND_ORDNANCE)	
						player.GiveOffhandWeapon("mp_titanweapon_tracker_rockets", OFFHAND_ORDNANCE )
						
						//Defence
						player.TakeOffhandWeapon(OFFHAND_SPECIAL)
						player.GiveOffhandWeapon("mp_titanability_particle_wall", OFFHAND_SPECIAL )
						
						//Tactical
			        	player.TakeOffhandWeapon(OFFHAND_ANTIRODEO)
						player.GiveOffhandWeapon("mp_titanability_sonar_pulse", OFFHAND_ANTIRODEO ) 
						
						//Melee
						player.TakeOffhandWeapon(OFFHAND_MELEE)
						player.GiveOffhandWeapon( "melee_titan_punch_tone", OFFHAND_MELEE )

						//Ammo
						//TakeWeaponAmmo( player )
						ReplaceWeaponAmmo( player, soul )
						SetWeaponCooldownsForTitanLoadoutSwitch( player, cooldowns )
					}
				}
				*/
				if( mainweapon.GetWeaponClassName() == "mp_titanweapon_rocketeer_rocketstream" )
				{
					if( !PlayerHasWeapon( player, "mp_titanweapon_flame_wall" ) )
					{
						SendHudMessage( player, "切换至野兽泰坦技能组", -1, 0.3, 255, 200, 0, 0, 0.15, 6, 0.15 )
						//Ordnance
						player.TakeOffhandWeapon(OFFHAND_ORDNANCE)	
						player.GiveOffhandWeapon("mp_titanweapon_flame_wall", OFFHAND_ORDNANCE )
						
						//Defence
						player.TakeOffhandWeapon(OFFHAND_SPECIAL)
						player.GiveOffhandWeapon("mp_titanability_particle_wall", OFFHAND_SPECIAL )
						
						//Tactical
			        	player.TakeOffhandWeapon(OFFHAND_ANTIRODEO)
						player.GiveOffhandWeapon("mp_titanability_laser_trip", OFFHAND_ANTIRODEO, ["pas_ion_tripwire", "fakebt_balance"] ) 
						
						//Melee
						player.TakeOffhandWeapon(OFFHAND_MELEE)
						player.GiveOffhandWeapon( "melee_titan_punch_northstar", OFFHAND_MELEE )

						//Ammo
						//TakeWeaponAmmo( player )
						ReplaceWeaponAmmo( player, soul )
						SetWeaponCooldownsForTitanLoadoutSwitch( player, cooldowns )
					}
				}
				int clipAmmoLeft = mainweapon.GetWeaponPrimaryClipCount() // always calcs current clip percentage
    			int maxClipAmmo = mainweapon.GetWeaponPrimaryClipCountMax()
				float clipLeft = float( clipAmmoLeft ) / float( maxClipAmmo )
				if( !( "lastPrimaryAmmo" in soul.s ) )
					soul.s.lastPrimaryAmmo <- 0.0
				soul.s.lastPrimaryAmmo = clipLeft
			}
		}
	}
	#endif
}

void function UpdateBTOffhands( entity player )
{
	player.EndSignal( "DisembarkingTitan" )
	player.EndSignal( "TitanEjectionStarted" )
	player.EndSignal( "OnDeath" )
	player.EndSignal( "OnDestroy" )
	while( true )
	{
		SetBTOffhands( player )
		WaitFrame()
	}
}

void function InitDoomedType( entity player )
{
	#if SERVER
	player.s.shouldInfiniteDoom <- true
	#endif
}

void function TakeWeaponAmmo( entity player )
{
	entity mainweapon = player.GetActiveWeapon()
	//array<entity> offhandweapons = player.GetOffhandWeapons()
	if( IsValid(mainweapon) )
	{
		//Ammo
		mainweapon.SetWeaponPrimaryClipCount( 0 )
		//foreach ( weapon in offhandweapons )
		//{
		//	weapon.SetWeaponPrimaryAmmoCount( 0 )

		//	if ( weapon.GetWeaponPrimaryClipCountMax() > 0 )
		//	weapon.SetWeaponPrimaryClipCount( 0 )
		//}
	}
}

void function ReplaceWeaponAmmo( entity player, entity soul )
{
	entity mainweapon = player.GetActiveWeapon()
	if( IsValid(mainweapon) )
	{
		float clipLeftPercentage = expect float( soul.s.lastPrimaryAmmo )
		if( clipLeftPercentage > 1 )
			clipLeftPercentage = 1
		if( clipLeftPercentage < 0 )
			clipLeftPercentage = 0
		//Ammo
		mainweapon.SetWeaponPrimaryClipCount( int( mainweapon.GetWeaponPrimaryClipCountMax() * clipLeftPercentage ) )
	}
}

void function EjectingVoiceline( entity titan )
{
	#if SERVER
	if( IsValid(titan) )
	{
		entity player = GetPetTitanOwner(titan)
		//Voicelines
		if( titan.GetModelName() == $"models/titans/buddy/titan_buddy.mdl")
		{
			entity soul = titan.GetTitanSoul()
			soul.EndSignal( "OnDestroy" )
			player.WaitSignal( "TitanEjectionStarted" )
			if( IsValid(player) )
			{
				vector origin = player.GetOrigin()
				EmitSoundAtPosition( TEAM_UNASSIGNED, origin, "diag_sp_extra_GB101_99_01_mcor_bt" )
			}
		}
	}
	#endif
}

void function SetAutoTitanTitle( entity titan )
{
	#if SERVER
	if( IsValid(titan) && titan.GetModelName() == $"models/titans/buddy/titan_buddy.mdl" )
		titan.SetTitle( "SB-7274" )
	#endif
}

void function SetPlayerTitanTitle( entity player )
{
	#if SERVER
	if( IsValid(player) && player.GetModelName() == $"models/titans/buddy/titan_buddy.mdl" )
		player.SetTitle( "SB-7274" )
	#endif
}

bool function CheckVoiceline( entity titan )
{
	#if SERVER
	if( IsValid(titan) )
	{
		entity soul = titan.GetTitanSoul()
		vector origin = titan.GetOrigin()
		//Voicelines
		if(IsValid(soul) && titan.GetModelName() == $"models/titans/buddy/titan_buddy.mdl")
		{
			if( soul.IsEjecting() )
			{
				EmitSoundAtPosition( TEAM_UNASSIGNED, origin, "diag_sp_extra_GB101_99_01_mcor_bt" )
				return false
			}
			return true
		}	
	}
	#endif
	return false
}

void function CheckVoiceline_Threaded( entity titan )
{
	while( true )
	{
		CheckVoiceline( titan )
		WaitFrame()
		if( CheckVoiceline(titan) == false )
			break
	}
}

void function TempDisableWeapon( entity weapon )
{
	weapon.EndSignal( "OnDestroy" )

	// save unused ammo and clip here
	int savedAmmo = weapon.GetWeaponPrimaryAmmoCount()
	int savedClip = weapon.GetWeaponPrimaryClipCount()

	// clear all ammo and clip, weapon will be unable to reload or fire
	weapon.SetWeaponPrimaryAmmoCount( 0 )
	weapon.SetWeaponPrimaryClipCount( 0 )

	weapon.WaitSignal( "RestoreAmmo" ) // wait for this signal then restore ammo
	// restore ammo and clip
	weapon.SetWeaponPrimaryAmmoCount( savedAmmo )
	weapon.SetWeaponPrimaryClipCount( savedClip )
}