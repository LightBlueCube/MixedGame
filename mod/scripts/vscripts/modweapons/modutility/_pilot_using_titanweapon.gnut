untyped
global function Pilot_Using_TitanWeapons_Init

global function OnWeaponOwnerChanged_PilotTitanWeapons
global function OnWeaponPrimaryAttack_PilotTitanWeapons

void function Pilot_Using_TitanWeapons_Init()
{

}

void function OnWeaponOwnerChanged_PilotTitanWeapons( entity weapon, WeaponChan )
{
    thread DelayedHideModelForPilots( weapon )
}

void function DelayedHideModelForPilots( entity weapon )
{
    WaitFrame()
    if( !IsValid( weapon ) )
        return
    entity owner = weapon.GetWeaponOwner()
    if( !IsValid( owner ) )
        return
    if( owner.IsTitan() )
        return
    if( !owner.IsPlayer() )
        return
    weapon.ClearParent()
    weapon.SetOrigin( < 0,0,-10000 > ) // underground
}

void function OnWeaponPrimaryAttack_PilotTitanWeapons( entity weapon, WeaponPrimaryAttackParams attackParams )
{
    if( weapon.GetWeaponSettingBool( eWeaponVar.looping_sounds ) )
        thread FakeLoopingSound( weapon, true )
    else
        FakeFiringSound( weapon ) // WIP

}

void function FakeLoopingSound( entity weapon, bool isLoopStart )
{
    if( !weapon.GetWeaponSettingBool( eWeaponVar.looping_sounds ) )
        return
    if( "loopingSound" in weapon.s )
    {
        if( expect bool( weapon.s.loopingSound ) )
            return
    }

    entity owner = weapon.GetWeaponOwner()
    array<string> fireSoundsToPlay
    array<string> loopingSoundsToPlay
    string fireSound = weapon.GetWeaponSettingString( eWeaponVar.fire_sound_1_player_3p )
	fireSoundsToPlay.append( fireSound )
    string fireSound2 = weapon.GetWeaponSettingString( eWeaponVar.fire_sound_2 )
    fireSoundsToPlay.append( fireSound )

    string loopingSoundStart = weapon.GetWeaponSettingString( eWeaponVar.burst_or_looping_fire_sound_start_3p )
    loopingSoundsToPlay.append( fireSound )
    string loopingSoundMiddle = weapon.GetWeaponSettingString( eWeaponVar.burst_or_looping_fire_sound_middle_3p )
    loopingSoundsToPlay.append( fireSound )

    string loopingSoundEnd = weapon.GetWeaponSettingString( eWeaponVar.burst_or_looping_fire_sound_end_3p )

    foreach( string sound in fireSoundsToPlay )
    {
        if( sound != "" )
            EmitSoundOnEntityExceptToPlayer( player, player, sound )
    }
    if( isLoopStart )
    {
        weapon.s.loopingSound <- true
        foreach( string sound in loopingSoundsToPlay )
        {
            if( sound != "" )
                EmitSoundOnEntityExceptToPlayer( player, player, sound )
        }
    }
    weapon.EndSignal( "OnPrimaryAttack" )
    weapon.EndSignal( "OnDestroy" )

    OnThreadEnd(
        function():( weapon )
        {
            if( IsValid( weapon ) )
                thread FakeLoopingSound( weapon, false )
        }
    )

    wait 0.2
    foreach( string sound in loopingSoundsToPlay )
    {
        if( sound != "" )
            StopSoundOnEntity( player, sound )
    }
    EmitSoundOnEntityExceptToPlayer( player, player, loopingSoundEnd )
    weapon.s.loopingSound = false
}
