global function Hack_Nerfed_Melee_Init

global function PlayerFakeMeleeThink

struct FakeMeleeStruct
{
    string meleeName
    array<string> meleeMods
}

struct
{
    table< entity, FakeMeleeStruct > playerFakeMeleeTable
} file

void function Hack_Nerfed_Melee_Init()
{
    RegisterSignal( "StartFakeMeleeThink" )
    RegisterSignal( "FakeMeleePressed" )
    AddCallback_OnClientConnected( OnClientConnected )
}

void function PlayerFakeMeleeThink( entity player, string meleeName, array<string> meleeMods )
{
    player.EndSignal( "OnDeath" )
    player.EndSignal( "OnDestroy" )
    player.Signal( "StartFakeMeleeThink" )
    player.EndSignal( "StartFakeMeleeThink" )

    OnThreadEnd(
        function(): ( player )
        {
            if( IsValid( player ) )
            {
                FakeMeleeStruct emptyStruct
                file.playerFakeMeleeTable[ player ] = emptyStruct // reset!
                RemoveButtonPressedPlayerInputCallback( player, IN_MELEE, TempGiveMeleeToPlayer )
            }
        }
    )

    // this will make client don't predict the melee lunging
    // player also won't lunge if they're having more than 0.05 move_slow effect
    player.PlayerMelee_SetState( PLAYER_MELEE_STATE_HUMAN_EVISCERATE_ATTACK )

    FakeMeleeStruct fakeMeleeWeapon
    fakeMeleeWeapon.meleeName = meleeName
    fakeMeleeWeapon.meleeMods = meleeMods
    file.playerFakeMeleeTable[ player ] = fakeMeleeWeapon

    float lastMeleeAttackTime = Time()
    player.TakeOffhandWeapon( OFFHAND_MELEE )
    AddButtonPressedPlayerInputCallback( player, IN_MELEE, TempGiveMeleeToPlayer ) // this can make melee less "stuck" i guess
    while( true )
    {
        // this doing less loop but not that good, animTime is hard to count...
        player.WaitSignal( "FakeMeleePressed" )
        entity meleeWeapon = player.GetOffhandWeapon( OFFHAND_MELEE )
        if( !IsValid( meleeWeapon ) )
            continue
        //if( !player.PlayerMelee_IsAttackActive() ) // not a successful melee...
        //    continue
        float attackAnimTime = meleeWeapon.GetWeaponSettingFloat( eWeaponVar.melee_attack_animtime )
        float emptyHandAnimTime = 0.8 // this is not set in melee_pilot_emptyhanded.txt, so do it here
        if( attackAnimTime == 0 )
            attackAnimTime = emptyHandAnimTime
        wait attackAnimTime
        player.TakeWeaponNow( meleeWeapon.GetWeaponClassName() )
    }
}

void function TempGiveMeleeToPlayer( entity player ) // don't use this alone
{
    thread TempGiveMeleeToPlayer_Threaded( player )
}

void function TempGiveMeleeToPlayer_Threaded( entity player )
{
    if( IsValid( player.GetOffhandWeapon( OFFHAND_MELEE ) ) )
    WaitFrame()
    if( !IsAlive( player ) )
        return
    if( IsValid( player.GetOffhandWeapon( OFFHAND_MELEE ) ) )
        return
    string meleeName = file.playerFakeMeleeTable[ player ].meleeName
    array<string> meleeMods = file.playerFakeMeleeTable[ player ].meleeMods
    player.GiveOffhandWeapon( meleeName, OFFHAND_MELEE, meleeMods )
    player.Signal( "FakeMeleePressed" )
    player.SetPredictionEnabled( true )
}

void function OnClientConnected( entity player )
{
    FakeMeleeStruct emptyStruct
    file.playerFakeMeleeTable[ player ] <- emptyStruct // init!
}
