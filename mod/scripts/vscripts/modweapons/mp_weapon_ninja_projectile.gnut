global function MpWeaponNinjaProjectile_Init
global function OnProjectileCollision_ninja_projectile

// it takes time to dissolve itself, so don't make it's lifetime too long
const float NINJA_PROJECTILE_LIFETIME = 3.0 

void function MpWeaponNinjaProjectile_Init()
{

}

void function OnProjectileCollision_ninja_projectile( entity projectile, vector pos, vector normal, entity hitEnt, int hitbox, bool isCritical )
{
    // fx goes every collision
    #if SERVER
        entity owner = projectile.GetOwner()
        /* // sound disabled for now
        if( IsValid( owner ) )
        {
            EmitSoundAtPositionExceptToPlayer( TEAM_UNASSIGNED, pos, owner, "Pilot_PulseBlade_Activated_3P" )
            EmitSoundAtPositionOnlyToPlayer( TEAM_UNASSIGNED, pos, owner, "Pilot_PulseBlade_Activated_1P" )
        }
        else
            EmitSoundAtPosition( TEAM_UNASSIGNED, pos, "Pilot_PulseBlade_Activated_3P" )
        PlayFX( $"P_impact_exp_laserlite_AMP", pos + normal, VectorToAngles( normal ) )
        */
        //EmitSoundAtPosition( TEAM_UNASSIGNED, pos, "PulseBlade_SurfaceImpact_BubbleShield_3P" )
        EmitSoundAtPosition( TEAM_UNASSIGNED, pos, "Pilot_PulseBlade_Activated_3P" )
        
    #endif

    if ( IsHumanSized( hitEnt ) )//Don't stick on Pilots/Grunts/Spectres. Causes pulse blade to fall into ground
		return

    bool didStick = PlantStickyGrenade( projectile, pos, normal, hitEnt, hitbox, 4.0, false )

    #if SERVER
        if ( didStick ) // successfully sticked!
            thread NinjaProjectileLifeTime( projectile )
    #endif
}

#if SERVER
void function NinjaProjectileLifeTime( entity projectile )
{
    projectile.EndSignal( "OnDestroy" )
    wait NINJA_PROJECTILE_LIFETIME
    projectile.Dissolve( ENTITY_DISSOLVE_CORE, Vector( 0, 0, 0 ), 500 )
}
#endif