


void function MainFunc_Init()
{
    AddCallback_GameStateEnter( eGameState.Playing, OnGamePlaying )
}

void function OnGamePlaying()
{
    TryCleanUpNPC()
}

void function TryCleanUpNPC() // 注意没有参数
{
    thread TryCleanUpNPC_Threaded()
}

void function TryCleanUpNPC_Threaded()
{
    svGlobal.levelEnt.EndSignal( "GameStateChanged" )
    while ( true )
	{
		while ( GetGlobalNetInt( "FD_AICount_Current" ) != 1 )
			WaitFrame()
		waitthread CleanUpLastNPC()
	}
}

void function CleanUpLastNPC()
{
    array<entity> npcs = GetNPCArrayOfTeam( TEAM_IMC )
    if ( npcs.len() == 0 ) // 已经被清空？
        return
    
    float endTime = Time() + 60 // 存下循环结束时间
    while ( Time() < endTime ) // 当时间小于循环剩余时间时，保持等待
    {
        npcs = GetNPCArrayOfTeam( TEAM_IMC ) // 持续更新npc数组
        if ( npcs.len() == 0 ) // 等待过程中被清空了？
            return
        WaitFrame()
    }

    // 等待结束，但仍剩余npc未被清除，清理所有npc
    foreach ( entity npc in GetNPCArrayOfTeam( TEAM_IMC ) )
    {
        if ( IsAlive( npc ) )
            npc.Die()
    }
}