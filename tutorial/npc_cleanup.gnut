


void function MainFunc_Init()
{
    AddCallback_GameStateEnter( eGameState.Playing, OnGamePlaying )
}

void function OnGamePlaying()
{
    TryCleanUpNPC()
}

void function TryCleanUpNPC() // 注意没有参数
{
    thread TryCleanUpNPC_Threaded()
}

void function TryCleanUpNPC_Threaded()
{
    svGlobal.levelEnt.EndSignal( "GameStateChanged" )
    while ( true )
	{
		while ( GetGlobalNetInt( "FD_AICount_Current" ) != 1 )
			WaitFrame()
		waitthread CleanUpLastNPC()
	}
}

void function CleanUpLastNPC()
{
    array<entity> npcs = GetNPCArrayOfTeam( TEAM_IMC )
    if ( npcs.len() == 0 ) // 已经被清空？
        return
    entity npc = npcs[0] // TEAM_IMC是边境的敌对队伍，获取其最后一个npc
    if ( !IsAlive( npc ) ) // 正在死亡动画？
        return
    npc.EndSignal( "OnDestroy" )
    npc.EndSignal( "OnDeath" )

    wait 60
    npc.Die() // 由于已经为其死亡和摧毁添加了EndSignal()，如果成功运行到了这里说明这个npc一定存活
}