untyped // 以便使用entity.s
global function MainFunc_Init

void function MainFunc_Init()
{
    AddCallback_OnNPCKilled( OnNPCKilled )
}


const table<int, float> COREMETER_MULTIPLIER =
{
    [ "mp_titancore_laser_cannon" ]     = 0.2,
    [ "mp_titancore_amp_core" ]         = 0.5,
}

void function OnNPCKilled( entity victim, entity attacker, var damageInfo )
{
    // 检查攻击者是否可用：攻击者可能在飞行物飞行过程中退出游戏
    if ( IsValid( attacker ) )
    {
        // 攻击者可用，检查其是否为玩家且为泰坦
        if ( attacker.IsPlayer() && attacker.IsTitan() )
        {
            entity coreWeapon = attacker.GetOffhandWeapon( OFFHAND_EQUIPMENT )
            if ( IsValid( coreWeapon ) ) // 检查核心是否可用：攻击者可能在飞行物飞行过程中死亡，核心被摧毁
            {
                string coreName = coreWeapon.GetWeaponClassName()
                if ( coreName in COREMETER_MULTIPLIER ) // 检查当前核心名是否在table里赋值
                {
                    float multiplier = COREMETER_MULTIPLIER[ coreName ]
                    float extraCoreMeter = GetExtraCoreMeterFromEnt( victim )
                    float coreMeter = extraCoreMeter * multiplier 
                    if ( coreMeter > 0 )
                        AddCreditToTitanCoreBuilder( attacker, damageAmount * multiplier )
                }
            }
        }
    }
}

const table<string, float> EXTRA_COREMETER =
{
    [ "npc_soldier" ]           = 0.01,
    [ "npc_stalker" ]           = 0.02,
    [ "npc_super_spectre" ]     = 0.10,
}

float function GetExtraCoreMeterFromEnt( entity ent )
{
    // 覆盖设置：如果entity.s.extraCoreMeter可用，使用其值
    if ( "extraCoreMeter" in ent.s )
        return expect float( ent.s.extraCoreMeter )

    // 默认检查
    string className = ent.GetClassName()
    if ( !( className in EXTRA_COREMETER ) )
        return 0.0

    // 返回 EXTRA_COREMETER 表内的额外核心值
    return EXTRA_COREMETER[ className ]
}